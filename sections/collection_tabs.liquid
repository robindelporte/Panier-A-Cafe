<style>
  .button.is-tab-button {
    opacity: 60%;
  }
  .button.is-tab-button.is-active {
    opacity: 100%;
  }
</style>
<div class="padding-global padding-section-medium">
  <div class="container-large">
    <div x-data="{tab: {{section.index}}1}" class="category_wrapper">
      <div class="category_top">
        <div role="tablist" li-for:inside="collection in section.settings.collection_list" class="tab_menu">
          {% for collection in section.settings.collection_list %}
            <button
              role="tab"
              x-on:click="tab = {{section.index}}{{forloop.index}}"
              aria-controls="collection-tab-{{section.index}}{{forloop.index}}"
              id="collection-button-{{section.index}}{{forloop.index}}"
              x-bind:aria-selected="tab === {{section.index}}{{forloop.index}} ? 'true' : 'false'"
              x-bind:class="tab === {{section.index}}{{forloop.index}} ? 'is-active' : ''"
              class="button is-tab-button"
            >
              <div li-object="collection.title">{{ collection.title }}</div>
            </button>
          {% endfor %}
        </div>
      </div>
      <div li-for:inside="collection in section.settings.collection_list" class="tab_body">
        {% for collection in section.settings.collection_list %}
          <div
            id="collection-tab-{{section.index}}{{forloop.index}}"
            role="tabpanel"
            aria-labelledby="collection-button-{{section.index}}{{forloop.index}}"
            x-show="tab === {{section.index}}{{forloop.index}}"
            class="category_tab-panel"
          >
            <div class="splide slider">
              <div class="splide__track">
                <div li-for:inside="product in collection.products limit: 4" class="splide__list">
                  {% for product in collection.products limit: 4 %}
                    <div class="splide__slide">{% render 'product_item', product: product %}</div>
                  {% endfor %}
                </div>
              </div>
            </div>
            <a li-object:href="collection.url" href="{{ collection.url }}" class="button is-secondary w-button"
              >En voir plus</a
            >
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>
<div class="hide w-embed"></div>
<div class="hide w-embed w-script">
  <script>
    let splideInstances = [];

    function initSplideSliders() {
      const isMobileOrTablet = window.innerWidth < 992;

      // Détruire toutes les instances existantes
      splideInstances.forEach(splide => {
        try {
          splide.destroy();
        } catch (e) {}
      });
      splideInstances = [];

      if (isMobileOrTablet) {
        // Initialiser tous les sliders
        const sliders = document.querySelectorAll('.splide.slider');

        sliders.forEach(sliderEl => {
          try {
            const splide = new Splide(sliderEl, {
              perPage: 4,
              perMove: 1,
              focus: 0,
              type: 'slide',
              gap: '40px',
              arrows: false,
              pagination: true,
              speed: 600,
              dragAngleThreshold: 30,
              autoWidth: false,
              rewind: false,
              rewindSpeed: 400,
              waitForTransition: false,
              updateOnMove: true,
              trimSpace: false,
              breakpoints: {
                991: {
                  perPage: 2,
                  gap: '32px',
                },
                767: {
                  perPage: 1.5,
                  gap: '20px',
                },
                479: {
                  perPage: 1,
                  gap: '16px',
                }
              }
            });

            splide.mount();
            splideInstances.push(splide);
          } catch (error) {
            console.error('Erreur Splide:', error);
          }
        });
      }
    }

    // Initialiser au chargement
    document.addEventListener('DOMContentLoaded', initSplideSliders);

    // Réinitialiser au resize
    window.addEventListener('resize', () => {
      clearTimeout(window.splideTimer);
      window.splideTimer = setTimeout(initSplideSliders, 200);
    });

    // Réinitialiser lors des clics (changement de tabs)
    document.addEventListener('click', () => {
      setTimeout(initSplideSliders, 100);
    });
  </script>
</div>
{% schema %} {"tag":"section","name":"Collection Tabs","class":"section_category","settings":[{"type":"collection_list","id":"collection_list","label":"Collections","limit":8}],"presets":[{"name":"Collection Tabs","category":"Liquify","blocks":[]}]} {% endschema %}
